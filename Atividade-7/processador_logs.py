"""
Crie um programa que analisa um arquivo CSV contendo dados de execu√ß√£o de um processo de treinamento. O programa deve:

* Solicitar ao usu√°rio o nome do arquivo CSV (ex: logs_treinamento.csv).  
* Ler os dados usando a biblioteca `pandas`.  
* Calcular a m√©dia e o desvio padr√£o da coluna `tempo_execucao`.  
* Exibir os resultados com duas casas decimais.  
* Tratar erros como arquivo inexistente ou formata√ß√£o incorreta.

Dica: Use `df['coluna'].mean()` e `df['coluna'].std()` para obter os resultados estat√≠sticos.
"""
import pandas as pd

def processar_logs():
    print("üîß Iniciando processamento...")
    nome_arquivo = input("üìÅ Digite o nome do arquivo CSV: ").strip()

    try:
        df = pd.read_csv(nome_arquivo)

        if 'Tempo de Execucao' not in df.columns:
            print("‚ùå A coluna 'Tempo de Execucao' n√£o foi encontrada no arquivo.")
            print(f"Colunas encontradas: {df.columns.tolist()}")
            return

        media = df['Tempo de Execucao'].mean()
        desvio = df['Tempo de Execucao'].std()

        print(f"üìä M√©dia do tempo de execu√ß√£o dos tickets: {media:.2f} dias")
        print(f"üìà Desvio padr√£o: {desvio:.2f} dias")

    except FileNotFoundError:
        print(f"‚ùå Arquivo '{nome_arquivo}' n√£o encontrado.")
    except pd.errors.EmptyDataError:
        print("‚ùå O arquivo est√° vazio ou mal formatado.")
    except Exception as e:
        print(f"‚ùå Ocorreu um erro: {e}")

if __name__ == "__main__":
    processar_logs()
 
        
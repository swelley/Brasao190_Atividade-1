"""
Consulta de CEP  
Desenvolva um programa que consulta dados de endere√ßo a partir de um CEP brasileiro. Siga os passos abaixo:

* Solicite ao usu√°rio que digite um CEP (apenas n√∫meros, sem tra√ßo).  
* Acesse a API p√∫blica do ViaCEP: "https://viacep.com.br/ws/{cep}/json/".  
* Exiba as seguintes informa√ß√µes: logradouro, bairro, cidade, estado e o pr√≥prio CEP.  
* Caso o CEP n√£o exista ou haja erro, informe isso de forma clara ao usu√°rio.  

Dica: Use o m√≥dulo `requests` e trate exce√ß√µes com `try/except`.
"""
import requests

def consultar_cep(cep):
    url = f"https://viacep.com.br/ws/{cep}/json/"

    try:
        resposta = requests.get(url)
        resposta.raise_for_status()
        dados = resposta.json()

        if "erro" in dados:
            print("‚ùå CEP n√£o encontrado. Verifique se digitou corretamente.")
        else:
            print("\nüìç Informa√ß√µes do endere√ßo:")
            print(f"CEP: {dados['cep']}")
            print(f"Logradouro: {dados['logradouro']}")
            print(f"Bairro: {dados['bairro']}")
            print(f"Cidade: {dados['localidade']}")
            print(f"Estado (UF): {dados['uf']}")
    except requests.exceptions.RequestException as erro:
        print("‚ùå Erro na conex√£o ou na requisi√ß√£o:", erro)

# Programa principal
cep_usuario = input("Digite o CEP (apenas n√∫meros): ").strip()

# Valida√ß√£o simples: se tem 8 d√≠gitos
if len(cep_usuario) == 8 and cep_usuario.isdigit():
    consultar_cep(cep_usuario)
else:
    print("‚ùå CEP inv√°lido. Digite exatamente 8 n√∫meros.")
# Fim do c√≥digo 

            